/*
 * ACH API
 * Moov ACH ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing, and validating ACH files. ACH is the primary method of electronic money movement throughout the United States.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.mifos.ach.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.mifos.ach.JSON;

/**
 * Addenda99Contested
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T08:19:26.833252621Z[Etc/UTC]", comments = "Generator version: 7.16.0-SNAPSHOT")
public class Addenda99Contested {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_TYPE_CODE = "typeCode";
  @SerializedName(SERIALIZED_NAME_TYPE_CODE)
  @javax.annotation.Nonnull
  private String typeCode;

  public static final String SERIALIZED_NAME_CONTESTED_RETURN_CODE = "contestedReturnCode";
  @SerializedName(SERIALIZED_NAME_CONTESTED_RETURN_CODE)
  @javax.annotation.Nonnull
  private String contestedReturnCode;

  public static final String SERIALIZED_NAME_DATE_ORIGINAL_ENTRY_RETURNED = "dateOriginalEntryReturned";
  @SerializedName(SERIALIZED_NAME_DATE_ORIGINAL_ENTRY_RETURNED)
  @javax.annotation.Nonnull
  private String dateOriginalEntryReturned;

  public static final String SERIALIZED_NAME_DISHONORED_RETURN_REASON_CODE = "dishonoredReturnReasonCode";
  @SerializedName(SERIALIZED_NAME_DISHONORED_RETURN_REASON_CODE)
  @javax.annotation.Nonnull
  private String dishonoredReturnReasonCode;

  public static final String SERIALIZED_NAME_DISHONORED_RETURN_TRACE_NUMBER = "dishonoredReturnTraceNumber";
  @SerializedName(SERIALIZED_NAME_DISHONORED_RETURN_TRACE_NUMBER)
  @javax.annotation.Nonnull
  private String dishonoredReturnTraceNumber;

  public static final String SERIALIZED_NAME_DISHONORED_RETURN_SETTLEMENT_DATE = "dishonoredReturnSettlementDate";
  @SerializedName(SERIALIZED_NAME_DISHONORED_RETURN_SETTLEMENT_DATE)
  @javax.annotation.Nonnull
  private String dishonoredReturnSettlementDate;

  public static final String SERIALIZED_NAME_ORIGINAL_ENTRY_TRACE_NUMBER = "originalEntryTraceNumber";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_ENTRY_TRACE_NUMBER)
  @javax.annotation.Nonnull
  private String originalEntryTraceNumber;

  public static final String SERIALIZED_NAME_ORIGINAL_RECEIVING_D_F_I_IDENTIFICATION = "originalReceivingDFIIdentification";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_RECEIVING_D_F_I_IDENTIFICATION)
  @javax.annotation.Nonnull
  private String originalReceivingDFIIdentification;

  public static final String SERIALIZED_NAME_ORIGINAL_SETTLEMENT_DATE = "originalSettlementDate";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_SETTLEMENT_DATE)
  @javax.annotation.Nonnull
  private String originalSettlementDate;

  public static final String SERIALIZED_NAME_RETURN_TRACE_NUMBER = "returnTraceNumber";
  @SerializedName(SERIALIZED_NAME_RETURN_TRACE_NUMBER)
  @javax.annotation.Nonnull
  private String returnTraceNumber;

  public static final String SERIALIZED_NAME_RETURN_SETTLEMENT_DATE = "returnSettlementDate";
  @SerializedName(SERIALIZED_NAME_RETURN_SETTLEMENT_DATE)
  @javax.annotation.Nonnull
  private String returnSettlementDate;

  public static final String SERIALIZED_NAME_RETURN_REASON_CODE = "returnReasonCode";
  @SerializedName(SERIALIZED_NAME_RETURN_REASON_CODE)
  @javax.annotation.Nonnull
  private String returnReasonCode;

  public static final String SERIALIZED_NAME_TRACE_NUMBER = "traceNumber";
  @SerializedName(SERIALIZED_NAME_TRACE_NUMBER)
  @javax.annotation.Nonnull
  private String traceNumber;

  public static final String SERIALIZED_NAME_LINE_NUMBER = "lineNumber";
  @SerializedName(SERIALIZED_NAME_LINE_NUMBER)
  @javax.annotation.Nullable
  private Integer lineNumber;

  public Addenda99Contested() {
  }

  public Addenda99Contested id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Client-defined string used as a reference to this record.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public Addenda99Contested typeCode(@javax.annotation.Nonnull String typeCode) {
    this.typeCode = typeCode;
    return this;
  }

  /**
   * 99 - NACHA regulations
   * @return typeCode
   */
  @javax.annotation.Nonnull
  public String getTypeCode() {
    return typeCode;
  }

  public void setTypeCode(@javax.annotation.Nonnull String typeCode) {
    this.typeCode = typeCode;
  }


  public Addenda99Contested contestedReturnCode(@javax.annotation.Nonnull String contestedReturnCode) {
    this.contestedReturnCode = contestedReturnCode;
    return this;
  }

  /**
   * return code explaining the contested dishonorment
   * @return contestedReturnCode
   */
  @javax.annotation.Nonnull
  public String getContestedReturnCode() {
    return contestedReturnCode;
  }

  public void setContestedReturnCode(@javax.annotation.Nonnull String contestedReturnCode) {
    this.contestedReturnCode = contestedReturnCode;
  }


  public Addenda99Contested dateOriginalEntryReturned(@javax.annotation.Nonnull String dateOriginalEntryReturned) {
    this.dateOriginalEntryReturned = dateOriginalEntryReturned;
    return this;
  }

  /**
   * Date original entry was returned
   * @return dateOriginalEntryReturned
   */
  @javax.annotation.Nonnull
  public String getDateOriginalEntryReturned() {
    return dateOriginalEntryReturned;
  }

  public void setDateOriginalEntryReturned(@javax.annotation.Nonnull String dateOriginalEntryReturned) {
    this.dateOriginalEntryReturned = dateOriginalEntryReturned;
  }


  public Addenda99Contested dishonoredReturnReasonCode(@javax.annotation.Nonnull String dishonoredReturnReasonCode) {
    this.dishonoredReturnReasonCode = dishonoredReturnReasonCode;
    return this;
  }

  /**
   * Return reason code of the Dishonored Return
   * @return dishonoredReturnReasonCode
   */
  @javax.annotation.Nonnull
  public String getDishonoredReturnReasonCode() {
    return dishonoredReturnReasonCode;
  }

  public void setDishonoredReturnReasonCode(@javax.annotation.Nonnull String dishonoredReturnReasonCode) {
    this.dishonoredReturnReasonCode = dishonoredReturnReasonCode;
  }


  public Addenda99Contested dishonoredReturnTraceNumber(@javax.annotation.Nonnull String dishonoredReturnTraceNumber) {
    this.dishonoredReturnTraceNumber = dishonoredReturnTraceNumber;
    return this;
  }

  /**
   * Trace number from Dishonored Return
   * @return dishonoredReturnTraceNumber
   */
  @javax.annotation.Nonnull
  public String getDishonoredReturnTraceNumber() {
    return dishonoredReturnTraceNumber;
  }

  public void setDishonoredReturnTraceNumber(@javax.annotation.Nonnull String dishonoredReturnTraceNumber) {
    this.dishonoredReturnTraceNumber = dishonoredReturnTraceNumber;
  }


  public Addenda99Contested dishonoredReturnSettlementDate(@javax.annotation.Nonnull String dishonoredReturnSettlementDate) {
    this.dishonoredReturnSettlementDate = dishonoredReturnSettlementDate;
    return this;
  }

  /**
   * Settlement date of the Dishonored Return
   * @return dishonoredReturnSettlementDate
   */
  @javax.annotation.Nonnull
  public String getDishonoredReturnSettlementDate() {
    return dishonoredReturnSettlementDate;
  }

  public void setDishonoredReturnSettlementDate(@javax.annotation.Nonnull String dishonoredReturnSettlementDate) {
    this.dishonoredReturnSettlementDate = dishonoredReturnSettlementDate;
  }


  public Addenda99Contested originalEntryTraceNumber(@javax.annotation.Nonnull String originalEntryTraceNumber) {
    this.originalEntryTraceNumber = originalEntryTraceNumber;
    return this;
  }

  /**
   * Trace Number of the original entry being returned.
   * @return originalEntryTraceNumber
   */
  @javax.annotation.Nonnull
  public String getOriginalEntryTraceNumber() {
    return originalEntryTraceNumber;
  }

  public void setOriginalEntryTraceNumber(@javax.annotation.Nonnull String originalEntryTraceNumber) {
    this.originalEntryTraceNumber = originalEntryTraceNumber;
  }


  public Addenda99Contested originalReceivingDFIIdentification(@javax.annotation.Nonnull String originalReceivingDFIIdentification) {
    this.originalReceivingDFIIdentification = originalReceivingDFIIdentification;
    return this;
  }

  /**
   * Identification of the Original Receiving Depository Institution (ODFI)
   * @return originalReceivingDFIIdentification
   */
  @javax.annotation.Nonnull
  public String getOriginalReceivingDFIIdentification() {
    return originalReceivingDFIIdentification;
  }

  public void setOriginalReceivingDFIIdentification(@javax.annotation.Nonnull String originalReceivingDFIIdentification) {
    this.originalReceivingDFIIdentification = originalReceivingDFIIdentification;
  }


  public Addenda99Contested originalSettlementDate(@javax.annotation.Nonnull String originalSettlementDate) {
    this.originalSettlementDate = originalSettlementDate;
    return this;
  }

  /**
   * Original date of settlement
   * @return originalSettlementDate
   */
  @javax.annotation.Nonnull
  public String getOriginalSettlementDate() {
    return originalSettlementDate;
  }

  public void setOriginalSettlementDate(@javax.annotation.Nonnull String originalSettlementDate) {
    this.originalSettlementDate = originalSettlementDate;
  }


  public Addenda99Contested returnTraceNumber(@javax.annotation.Nonnull String returnTraceNumber) {
    this.returnTraceNumber = returnTraceNumber;
    return this;
  }

  /**
   * Return trace number
   * @return returnTraceNumber
   */
  @javax.annotation.Nonnull
  public String getReturnTraceNumber() {
    return returnTraceNumber;
  }

  public void setReturnTraceNumber(@javax.annotation.Nonnull String returnTraceNumber) {
    this.returnTraceNumber = returnTraceNumber;
  }


  public Addenda99Contested returnSettlementDate(@javax.annotation.Nonnull String returnSettlementDate) {
    this.returnSettlementDate = returnSettlementDate;
    return this;
  }

  /**
   * Return settlement date
   * @return returnSettlementDate
   */
  @javax.annotation.Nonnull
  public String getReturnSettlementDate() {
    return returnSettlementDate;
  }

  public void setReturnSettlementDate(@javax.annotation.Nonnull String returnSettlementDate) {
    this.returnSettlementDate = returnSettlementDate;
  }


  public Addenda99Contested returnReasonCode(@javax.annotation.Nonnull String returnReasonCode) {
    this.returnReasonCode = returnReasonCode;
    return this;
  }

  /**
   * Return reason code
   * @return returnReasonCode
   */
  @javax.annotation.Nonnull
  public String getReturnReasonCode() {
    return returnReasonCode;
  }

  public void setReturnReasonCode(@javax.annotation.Nonnull String returnReasonCode) {
    this.returnReasonCode = returnReasonCode;
  }


  public Addenda99Contested traceNumber(@javax.annotation.Nonnull String traceNumber) {
    this.traceNumber = traceNumber;
    return this;
  }

  /**
   * Unique Trace Number for the contested dishonored return
   * @return traceNumber
   */
  @javax.annotation.Nonnull
  public String getTraceNumber() {
    return traceNumber;
  }

  public void setTraceNumber(@javax.annotation.Nonnull String traceNumber) {
    this.traceNumber = traceNumber;
  }


  public Addenda99Contested lineNumber(@javax.annotation.Nullable Integer lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

  /**
   * Line number at which the record appears in the file.
   * @return lineNumber
   */
  @javax.annotation.Nullable
  public Integer getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(@javax.annotation.Nullable Integer lineNumber) {
    this.lineNumber = lineNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Addenda99Contested addenda99Contested = (Addenda99Contested) o;
    return Objects.equals(this.id, addenda99Contested.id) &&
        Objects.equals(this.typeCode, addenda99Contested.typeCode) &&
        Objects.equals(this.contestedReturnCode, addenda99Contested.contestedReturnCode) &&
        Objects.equals(this.dateOriginalEntryReturned, addenda99Contested.dateOriginalEntryReturned) &&
        Objects.equals(this.dishonoredReturnReasonCode, addenda99Contested.dishonoredReturnReasonCode) &&
        Objects.equals(this.dishonoredReturnTraceNumber, addenda99Contested.dishonoredReturnTraceNumber) &&
        Objects.equals(this.dishonoredReturnSettlementDate, addenda99Contested.dishonoredReturnSettlementDate) &&
        Objects.equals(this.originalEntryTraceNumber, addenda99Contested.originalEntryTraceNumber) &&
        Objects.equals(this.originalReceivingDFIIdentification, addenda99Contested.originalReceivingDFIIdentification) &&
        Objects.equals(this.originalSettlementDate, addenda99Contested.originalSettlementDate) &&
        Objects.equals(this.returnTraceNumber, addenda99Contested.returnTraceNumber) &&
        Objects.equals(this.returnSettlementDate, addenda99Contested.returnSettlementDate) &&
        Objects.equals(this.returnReasonCode, addenda99Contested.returnReasonCode) &&
        Objects.equals(this.traceNumber, addenda99Contested.traceNumber) &&
        Objects.equals(this.lineNumber, addenda99Contested.lineNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, typeCode, contestedReturnCode, dateOriginalEntryReturned, dishonoredReturnReasonCode, dishonoredReturnTraceNumber, dishonoredReturnSettlementDate, originalEntryTraceNumber, originalReceivingDFIIdentification, originalSettlementDate, returnTraceNumber, returnSettlementDate, returnReasonCode, traceNumber, lineNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Addenda99Contested {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    typeCode: ").append(toIndentedString(typeCode)).append("\n");
    sb.append("    contestedReturnCode: ").append(toIndentedString(contestedReturnCode)).append("\n");
    sb.append("    dateOriginalEntryReturned: ").append(toIndentedString(dateOriginalEntryReturned)).append("\n");
    sb.append("    dishonoredReturnReasonCode: ").append(toIndentedString(dishonoredReturnReasonCode)).append("\n");
    sb.append("    dishonoredReturnTraceNumber: ").append(toIndentedString(dishonoredReturnTraceNumber)).append("\n");
    sb.append("    dishonoredReturnSettlementDate: ").append(toIndentedString(dishonoredReturnSettlementDate)).append("\n");
    sb.append("    originalEntryTraceNumber: ").append(toIndentedString(originalEntryTraceNumber)).append("\n");
    sb.append("    originalReceivingDFIIdentification: ").append(toIndentedString(originalReceivingDFIIdentification)).append("\n");
    sb.append("    originalSettlementDate: ").append(toIndentedString(originalSettlementDate)).append("\n");
    sb.append("    returnTraceNumber: ").append(toIndentedString(returnTraceNumber)).append("\n");
    sb.append("    returnSettlementDate: ").append(toIndentedString(returnSettlementDate)).append("\n");
    sb.append("    returnReasonCode: ").append(toIndentedString(returnReasonCode)).append("\n");
    sb.append("    traceNumber: ").append(toIndentedString(traceNumber)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("id", "typeCode", "contestedReturnCode", "dateOriginalEntryReturned", "dishonoredReturnReasonCode", "dishonoredReturnTraceNumber", "dishonoredReturnSettlementDate", "originalEntryTraceNumber", "originalReceivingDFIIdentification", "originalSettlementDate", "returnTraceNumber", "returnSettlementDate", "returnReasonCode", "traceNumber", "lineNumber"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("typeCode", "contestedReturnCode", "dateOriginalEntryReturned", "dishonoredReturnReasonCode", "dishonoredReturnTraceNumber", "dishonoredReturnSettlementDate", "originalEntryTraceNumber", "originalReceivingDFIIdentification", "originalSettlementDate", "returnTraceNumber", "returnSettlementDate", "returnReasonCode", "traceNumber"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Addenda99Contested
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Addenda99Contested.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Addenda99Contested is not found in the empty JSON string", Addenda99Contested.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Addenda99Contested.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Addenda99Contested` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Addenda99Contested.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("typeCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `typeCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("typeCode").toString()));
      }
      if (!jsonObj.get("contestedReturnCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contestedReturnCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contestedReturnCode").toString()));
      }
      if (!jsonObj.get("dateOriginalEntryReturned").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateOriginalEntryReturned` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateOriginalEntryReturned").toString()));
      }
      if (!jsonObj.get("dishonoredReturnReasonCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dishonoredReturnReasonCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dishonoredReturnReasonCode").toString()));
      }
      if (!jsonObj.get("dishonoredReturnTraceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dishonoredReturnTraceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dishonoredReturnTraceNumber").toString()));
      }
      if (!jsonObj.get("dishonoredReturnSettlementDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dishonoredReturnSettlementDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dishonoredReturnSettlementDate").toString()));
      }
      if (!jsonObj.get("originalEntryTraceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originalEntryTraceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originalEntryTraceNumber").toString()));
      }
      if (!jsonObj.get("originalReceivingDFIIdentification").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originalReceivingDFIIdentification` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originalReceivingDFIIdentification").toString()));
      }
      if (!jsonObj.get("originalSettlementDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originalSettlementDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originalSettlementDate").toString()));
      }
      if (!jsonObj.get("returnTraceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnTraceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnTraceNumber").toString()));
      }
      if (!jsonObj.get("returnSettlementDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnSettlementDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnSettlementDate").toString()));
      }
      if (!jsonObj.get("returnReasonCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnReasonCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnReasonCode").toString()));
      }
      if (!jsonObj.get("traceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `traceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("traceNumber").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Addenda99Contested.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Addenda99Contested' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Addenda99Contested> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Addenda99Contested.class));

       return (TypeAdapter<T>) new TypeAdapter<Addenda99Contested>() {
           @Override
           public void write(JsonWriter out, Addenda99Contested value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Addenda99Contested read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Addenda99Contested given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Addenda99Contested
   * @throws IOException if the JSON string is invalid with respect to Addenda99Contested
   */
  public static Addenda99Contested fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Addenda99Contested.class);
  }

  /**
   * Convert an instance of Addenda99Contested to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

