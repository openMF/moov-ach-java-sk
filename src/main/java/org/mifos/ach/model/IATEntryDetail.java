/*
 * ACH API
 * Moov ACH ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing, and validating ACH files. ACH is the primary method of electronic money movement throughout the United States.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.mifos.ach.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.mifos.ach.model.Addenda10;
import org.mifos.ach.model.Addenda11;
import org.mifos.ach.model.Addenda12;
import org.mifos.ach.model.Addenda13;
import org.mifos.ach.model.Addenda14;
import org.mifos.ach.model.Addenda15;
import org.mifos.ach.model.Addenda16;
import org.mifos.ach.model.Addenda17;
import org.mifos.ach.model.Addenda18;
import org.mifos.ach.model.Addenda98;
import org.mifos.ach.model.Addenda99;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.mifos.ach.JSON;

/**
 * IATEntryDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T08:19:26.833252621Z[Etc/UTC]", comments = "Generator version: 7.16.0-SNAPSHOT")
public class IATEntryDetail {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_TRANSACTION_CODE = "transactionCode";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_CODE)
  @javax.annotation.Nonnull
  private Integer transactionCode;

  public static final String SERIALIZED_NAME_RD_F_I_IDENTIFICATION = "RDFIIdentification";
  @SerializedName(SERIALIZED_NAME_RD_F_I_IDENTIFICATION)
  @javax.annotation.Nonnull
  private String rdFIIdentification;

  public static final String SERIALIZED_NAME_CHECK_DIGIT = "checkDigit";
  @SerializedName(SERIALIZED_NAME_CHECK_DIGIT)
  @javax.annotation.Nonnull
  private String checkDigit;

  public static final String SERIALIZED_NAME_ADDENDA_RECORDS = "addendaRecords";
  @SerializedName(SERIALIZED_NAME_ADDENDA_RECORDS)
  @javax.annotation.Nonnull
  private Integer addendaRecords;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  @javax.annotation.Nonnull
  private Long amount;

  public static final String SERIALIZED_NAME_DF_I_ACCOUNT_NUMBER = "DFIAccountNumber";
  @SerializedName(SERIALIZED_NAME_DF_I_ACCOUNT_NUMBER)
  @javax.annotation.Nonnull
  private String dfIAccountNumber;

  public static final String SERIALIZED_NAME_OF_A_C_SCREENING_INDICATOR = "OFACScreeningIndicator";
  @SerializedName(SERIALIZED_NAME_OF_A_C_SCREENING_INDICATOR)
  @javax.annotation.Nonnull
  private String ofACScreeningIndicator;

  public static final String SERIALIZED_NAME_SECONDARY_O_F_A_C_SCREENING_INDICATOR = "secondaryOFACScreeningIndicator";
  @SerializedName(SERIALIZED_NAME_SECONDARY_O_F_A_C_SCREENING_INDICATOR)
  @javax.annotation.Nonnull
  private String secondaryOFACScreeningIndicator;

  public static final String SERIALIZED_NAME_ADDENDA_RECORD_INDICATOR = "addendaRecordIndicator";
  @SerializedName(SERIALIZED_NAME_ADDENDA_RECORD_INDICATOR)
  @javax.annotation.Nonnull
  private Integer addendaRecordIndicator;

  public static final String SERIALIZED_NAME_TRACE_NUMBER = "traceNumber";
  @SerializedName(SERIALIZED_NAME_TRACE_NUMBER)
  @javax.annotation.Nullable
  private String traceNumber;

  public static final String SERIALIZED_NAME_ADDENDA10 = "addenda10";
  @SerializedName(SERIALIZED_NAME_ADDENDA10)
  @javax.annotation.Nonnull
  private Addenda10 addenda10;

  public static final String SERIALIZED_NAME_ADDENDA11 = "addenda11";
  @SerializedName(SERIALIZED_NAME_ADDENDA11)
  @javax.annotation.Nonnull
  private Addenda11 addenda11;

  public static final String SERIALIZED_NAME_ADDENDA12 = "addenda12";
  @SerializedName(SERIALIZED_NAME_ADDENDA12)
  @javax.annotation.Nonnull
  private Addenda12 addenda12;

  public static final String SERIALIZED_NAME_ADDENDA13 = "addenda13";
  @SerializedName(SERIALIZED_NAME_ADDENDA13)
  @javax.annotation.Nonnull
  private Addenda13 addenda13;

  public static final String SERIALIZED_NAME_ADDENDA14 = "addenda14";
  @SerializedName(SERIALIZED_NAME_ADDENDA14)
  @javax.annotation.Nonnull
  private Addenda14 addenda14;

  public static final String SERIALIZED_NAME_ADDENDA15 = "addenda15";
  @SerializedName(SERIALIZED_NAME_ADDENDA15)
  @javax.annotation.Nonnull
  private Addenda15 addenda15;

  public static final String SERIALIZED_NAME_ADDENDA16 = "addenda16";
  @SerializedName(SERIALIZED_NAME_ADDENDA16)
  @javax.annotation.Nonnull
  private Addenda16 addenda16;

  public static final String SERIALIZED_NAME_ADDENDA17 = "addenda17";
  @SerializedName(SERIALIZED_NAME_ADDENDA17)
  @javax.annotation.Nullable
  private List<Addenda17> addenda17 = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADDENDA18 = "addenda18";
  @SerializedName(SERIALIZED_NAME_ADDENDA18)
  @javax.annotation.Nullable
  private List<Addenda18> addenda18 = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADDENDA98 = "addenda98";
  @SerializedName(SERIALIZED_NAME_ADDENDA98)
  @javax.annotation.Nullable
  private Addenda98 addenda98;

  public static final String SERIALIZED_NAME_ADDENDA99 = "addenda99";
  @SerializedName(SERIALIZED_NAME_ADDENDA99)
  @javax.annotation.Nullable
  private Addenda99 addenda99;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  @javax.annotation.Nullable
  private String category;

  public static final String SERIALIZED_NAME_LINE_NUMBER = "lineNumber";
  @SerializedName(SERIALIZED_NAME_LINE_NUMBER)
  @javax.annotation.Nullable
  private Integer lineNumber;

  public IATEntryDetail() {
  }

  public IATEntryDetail id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Entry Detail ID
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public IATEntryDetail transactionCode(@javax.annotation.Nonnull Integer transactionCode) {
    this.transactionCode = transactionCode;
    return this;
  }

  /**
   * Based on transaction type: 22 - Credit (deposit) to checking account | 23 - Prenote for credit to checking account | 27 - Debit (withdrawal) to checking account | 28 - Prenote for debit to checking account | 32 - Credit to savings account | 33 - Prenote for credit to savings account | 37 - Debit to savings account | 38 - Prenote for debit to savings account 
   * @return transactionCode
   */
  @javax.annotation.Nonnull
  public Integer getTransactionCode() {
    return transactionCode;
  }

  public void setTransactionCode(@javax.annotation.Nonnull Integer transactionCode) {
    this.transactionCode = transactionCode;
  }


  public IATEntryDetail rdFIIdentification(@javax.annotation.Nonnull String rdFIIdentification) {
    this.rdFIIdentification = rdFIIdentification;
    return this;
  }

  /**
   * RDFI&#39;s routing number without the last digit.
   * @return rdFIIdentification
   */
  @javax.annotation.Nonnull
  public String getRdFIIdentification() {
    return rdFIIdentification;
  }

  public void setRdFIIdentification(@javax.annotation.Nonnull String rdFIIdentification) {
    this.rdFIIdentification = rdFIIdentification;
  }


  public IATEntryDetail checkDigit(@javax.annotation.Nonnull String checkDigit) {
    this.checkDigit = checkDigit;
    return this;
  }

  /**
   * Last digit in RDFI routing number.
   * @return checkDigit
   */
  @javax.annotation.Nonnull
  public String getCheckDigit() {
    return checkDigit;
  }

  public void setCheckDigit(@javax.annotation.Nonnull String checkDigit) {
    this.checkDigit = checkDigit;
  }


  public IATEntryDetail addendaRecords(@javax.annotation.Nonnull Integer addendaRecords) {
    this.addendaRecords = addendaRecords;
    return this;
  }

  /**
   * Number of Addenda Records
   * @return addendaRecords
   */
  @javax.annotation.Nonnull
  public Integer getAddendaRecords() {
    return addendaRecords;
  }

  public void setAddendaRecords(@javax.annotation.Nonnull Integer addendaRecords) {
    this.addendaRecords = addendaRecords;
  }


  public IATEntryDetail amount(@javax.annotation.Nonnull Long amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Number of cents you are debiting/crediting this account
   * @return amount
   */
  @javax.annotation.Nonnull
  public Long getAmount() {
    return amount;
  }

  public void setAmount(@javax.annotation.Nonnull Long amount) {
    this.amount = amount;
  }


  public IATEntryDetail dfIAccountNumber(@javax.annotation.Nonnull String dfIAccountNumber) {
    this.dfIAccountNumber = dfIAccountNumber;
    return this;
  }

  /**
   * The receiver&#39;s bank account number you are crediting/debiting. It important to note that this is an alphanumeric field, so it&#39;s space padded, not zero padded 
   * @return dfIAccountNumber
   */
  @javax.annotation.Nonnull
  public String getDfIAccountNumber() {
    return dfIAccountNumber;
  }

  public void setDfIAccountNumber(@javax.annotation.Nonnull String dfIAccountNumber) {
    this.dfIAccountNumber = dfIAccountNumber;
  }


  public IATEntryDetail ofACScreeningIndicator(@javax.annotation.Nonnull String ofACScreeningIndicator) {
    this.ofACScreeningIndicator = ofACScreeningIndicator;
    return this;
  }

  /**
   * Signifies if the record has been screened against OFAC records
   * @return ofACScreeningIndicator
   */
  @javax.annotation.Nonnull
  public String getOfACScreeningIndicator() {
    return ofACScreeningIndicator;
  }

  public void setOfACScreeningIndicator(@javax.annotation.Nonnull String ofACScreeningIndicator) {
    this.ofACScreeningIndicator = ofACScreeningIndicator;
  }


  public IATEntryDetail secondaryOFACScreeningIndicator(@javax.annotation.Nonnull String secondaryOFACScreeningIndicator) {
    this.secondaryOFACScreeningIndicator = secondaryOFACScreeningIndicator;
    return this;
  }

  /**
   * Signifies if the record has been screened against OFAC records by a secondary entry
   * @return secondaryOFACScreeningIndicator
   */
  @javax.annotation.Nonnull
  public String getSecondaryOFACScreeningIndicator() {
    return secondaryOFACScreeningIndicator;
  }

  public void setSecondaryOFACScreeningIndicator(@javax.annotation.Nonnull String secondaryOFACScreeningIndicator) {
    this.secondaryOFACScreeningIndicator = secondaryOFACScreeningIndicator;
  }


  public IATEntryDetail addendaRecordIndicator(@javax.annotation.Nonnull Integer addendaRecordIndicator) {
    this.addendaRecordIndicator = addendaRecordIndicator;
    return this;
  }

  /**
   * AddendaRecordIndicator indicates the existence of an Addenda Record. A value of \&quot;1\&quot; indicates that one or more addenda records follow, and \&quot;0\&quot; means no such record is present. 
   * @return addendaRecordIndicator
   */
  @javax.annotation.Nonnull
  public Integer getAddendaRecordIndicator() {
    return addendaRecordIndicator;
  }

  public void setAddendaRecordIndicator(@javax.annotation.Nonnull Integer addendaRecordIndicator) {
    this.addendaRecordIndicator = addendaRecordIndicator;
  }


  public IATEntryDetail traceNumber(@javax.annotation.Nullable String traceNumber) {
    this.traceNumber = traceNumber;
    return this;
  }

  /**
   * Matches the Entry Detail Trace Number of the entry being returned.
   * @return traceNumber
   */
  @javax.annotation.Nullable
  public String getTraceNumber() {
    return traceNumber;
  }

  public void setTraceNumber(@javax.annotation.Nullable String traceNumber) {
    this.traceNumber = traceNumber;
  }


  public IATEntryDetail addenda10(@javax.annotation.Nonnull Addenda10 addenda10) {
    this.addenda10 = addenda10;
    return this;
  }

  /**
   * Get addenda10
   * @return addenda10
   */
  @javax.annotation.Nonnull
  public Addenda10 getAddenda10() {
    return addenda10;
  }

  public void setAddenda10(@javax.annotation.Nonnull Addenda10 addenda10) {
    this.addenda10 = addenda10;
  }


  public IATEntryDetail addenda11(@javax.annotation.Nonnull Addenda11 addenda11) {
    this.addenda11 = addenda11;
    return this;
  }

  /**
   * Get addenda11
   * @return addenda11
   */
  @javax.annotation.Nonnull
  public Addenda11 getAddenda11() {
    return addenda11;
  }

  public void setAddenda11(@javax.annotation.Nonnull Addenda11 addenda11) {
    this.addenda11 = addenda11;
  }


  public IATEntryDetail addenda12(@javax.annotation.Nonnull Addenda12 addenda12) {
    this.addenda12 = addenda12;
    return this;
  }

  /**
   * Get addenda12
   * @return addenda12
   */
  @javax.annotation.Nonnull
  public Addenda12 getAddenda12() {
    return addenda12;
  }

  public void setAddenda12(@javax.annotation.Nonnull Addenda12 addenda12) {
    this.addenda12 = addenda12;
  }


  public IATEntryDetail addenda13(@javax.annotation.Nonnull Addenda13 addenda13) {
    this.addenda13 = addenda13;
    return this;
  }

  /**
   * Get addenda13
   * @return addenda13
   */
  @javax.annotation.Nonnull
  public Addenda13 getAddenda13() {
    return addenda13;
  }

  public void setAddenda13(@javax.annotation.Nonnull Addenda13 addenda13) {
    this.addenda13 = addenda13;
  }


  public IATEntryDetail addenda14(@javax.annotation.Nonnull Addenda14 addenda14) {
    this.addenda14 = addenda14;
    return this;
  }

  /**
   * Get addenda14
   * @return addenda14
   */
  @javax.annotation.Nonnull
  public Addenda14 getAddenda14() {
    return addenda14;
  }

  public void setAddenda14(@javax.annotation.Nonnull Addenda14 addenda14) {
    this.addenda14 = addenda14;
  }


  public IATEntryDetail addenda15(@javax.annotation.Nonnull Addenda15 addenda15) {
    this.addenda15 = addenda15;
    return this;
  }

  /**
   * Get addenda15
   * @return addenda15
   */
  @javax.annotation.Nonnull
  public Addenda15 getAddenda15() {
    return addenda15;
  }

  public void setAddenda15(@javax.annotation.Nonnull Addenda15 addenda15) {
    this.addenda15 = addenda15;
  }


  public IATEntryDetail addenda16(@javax.annotation.Nonnull Addenda16 addenda16) {
    this.addenda16 = addenda16;
    return this;
  }

  /**
   * Get addenda16
   * @return addenda16
   */
  @javax.annotation.Nonnull
  public Addenda16 getAddenda16() {
    return addenda16;
  }

  public void setAddenda16(@javax.annotation.Nonnull Addenda16 addenda16) {
    this.addenda16 = addenda16;
  }


  public IATEntryDetail addenda17(@javax.annotation.Nullable List<Addenda17> addenda17) {
    this.addenda17 = addenda17;
    return this;
  }

  public IATEntryDetail addAddenda17Item(Addenda17 addenda17Item) {
    if (this.addenda17 == null) {
      this.addenda17 = new ArrayList<>();
    }
    this.addenda17.add(addenda17Item);
    return this;
  }

  /**
   * Get addenda17
   * @return addenda17
   */
  @javax.annotation.Nullable
  public List<Addenda17> getAddenda17() {
    return addenda17;
  }

  public void setAddenda17(@javax.annotation.Nullable List<Addenda17> addenda17) {
    this.addenda17 = addenda17;
  }


  public IATEntryDetail addenda18(@javax.annotation.Nullable List<Addenda18> addenda18) {
    this.addenda18 = addenda18;
    return this;
  }

  public IATEntryDetail addAddenda18Item(Addenda18 addenda18Item) {
    if (this.addenda18 == null) {
      this.addenda18 = new ArrayList<>();
    }
    this.addenda18.add(addenda18Item);
    return this;
  }

  /**
   * Get addenda18
   * @return addenda18
   */
  @javax.annotation.Nullable
  public List<Addenda18> getAddenda18() {
    return addenda18;
  }

  public void setAddenda18(@javax.annotation.Nullable List<Addenda18> addenda18) {
    this.addenda18 = addenda18;
  }


  public IATEntryDetail addenda98(@javax.annotation.Nullable Addenda98 addenda98) {
    this.addenda98 = addenda98;
    return this;
  }

  /**
   * Get addenda98
   * @return addenda98
   */
  @javax.annotation.Nullable
  public Addenda98 getAddenda98() {
    return addenda98;
  }

  public void setAddenda98(@javax.annotation.Nullable Addenda98 addenda98) {
    this.addenda98 = addenda98;
  }


  public IATEntryDetail addenda99(@javax.annotation.Nullable Addenda99 addenda99) {
    this.addenda99 = addenda99;
    return this;
  }

  /**
   * Get addenda99
   * @return addenda99
   */
  @javax.annotation.Nullable
  public Addenda99 getAddenda99() {
    return addenda99;
  }

  public void setAddenda99(@javax.annotation.Nullable Addenda99 addenda99) {
    this.addenda99 = addenda99;
  }


  public IATEntryDetail category(@javax.annotation.Nullable String category) {
    this.category = category;
    return this;
  }

  /**
   * Category defines if the entry is a Forward, Return, or NOC
   * @return category
   */
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }

  public void setCategory(@javax.annotation.Nullable String category) {
    this.category = category;
  }


  public IATEntryDetail lineNumber(@javax.annotation.Nullable Integer lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

  /**
   * Line number at which the record appears in the file.
   * @return lineNumber
   */
  @javax.annotation.Nullable
  public Integer getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(@javax.annotation.Nullable Integer lineNumber) {
    this.lineNumber = lineNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IATEntryDetail iaTEntryDetail = (IATEntryDetail) o;
    return Objects.equals(this.id, iaTEntryDetail.id) &&
        Objects.equals(this.transactionCode, iaTEntryDetail.transactionCode) &&
        Objects.equals(this.rdFIIdentification, iaTEntryDetail.rdFIIdentification) &&
        Objects.equals(this.checkDigit, iaTEntryDetail.checkDigit) &&
        Objects.equals(this.addendaRecords, iaTEntryDetail.addendaRecords) &&
        Objects.equals(this.amount, iaTEntryDetail.amount) &&
        Objects.equals(this.dfIAccountNumber, iaTEntryDetail.dfIAccountNumber) &&
        Objects.equals(this.ofACScreeningIndicator, iaTEntryDetail.ofACScreeningIndicator) &&
        Objects.equals(this.secondaryOFACScreeningIndicator, iaTEntryDetail.secondaryOFACScreeningIndicator) &&
        Objects.equals(this.addendaRecordIndicator, iaTEntryDetail.addendaRecordIndicator) &&
        Objects.equals(this.traceNumber, iaTEntryDetail.traceNumber) &&
        Objects.equals(this.addenda10, iaTEntryDetail.addenda10) &&
        Objects.equals(this.addenda11, iaTEntryDetail.addenda11) &&
        Objects.equals(this.addenda12, iaTEntryDetail.addenda12) &&
        Objects.equals(this.addenda13, iaTEntryDetail.addenda13) &&
        Objects.equals(this.addenda14, iaTEntryDetail.addenda14) &&
        Objects.equals(this.addenda15, iaTEntryDetail.addenda15) &&
        Objects.equals(this.addenda16, iaTEntryDetail.addenda16) &&
        Objects.equals(this.addenda17, iaTEntryDetail.addenda17) &&
        Objects.equals(this.addenda18, iaTEntryDetail.addenda18) &&
        Objects.equals(this.addenda98, iaTEntryDetail.addenda98) &&
        Objects.equals(this.addenda99, iaTEntryDetail.addenda99) &&
        Objects.equals(this.category, iaTEntryDetail.category) &&
        Objects.equals(this.lineNumber, iaTEntryDetail.lineNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, transactionCode, rdFIIdentification, checkDigit, addendaRecords, amount, dfIAccountNumber, ofACScreeningIndicator, secondaryOFACScreeningIndicator, addendaRecordIndicator, traceNumber, addenda10, addenda11, addenda12, addenda13, addenda14, addenda15, addenda16, addenda17, addenda18, addenda98, addenda99, category, lineNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IATEntryDetail {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    transactionCode: ").append(toIndentedString(transactionCode)).append("\n");
    sb.append("    rdFIIdentification: ").append(toIndentedString(rdFIIdentification)).append("\n");
    sb.append("    checkDigit: ").append(toIndentedString(checkDigit)).append("\n");
    sb.append("    addendaRecords: ").append(toIndentedString(addendaRecords)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    dfIAccountNumber: ").append(toIndentedString(dfIAccountNumber)).append("\n");
    sb.append("    ofACScreeningIndicator: ").append(toIndentedString(ofACScreeningIndicator)).append("\n");
    sb.append("    secondaryOFACScreeningIndicator: ").append(toIndentedString(secondaryOFACScreeningIndicator)).append("\n");
    sb.append("    addendaRecordIndicator: ").append(toIndentedString(addendaRecordIndicator)).append("\n");
    sb.append("    traceNumber: ").append(toIndentedString(traceNumber)).append("\n");
    sb.append("    addenda10: ").append(toIndentedString(addenda10)).append("\n");
    sb.append("    addenda11: ").append(toIndentedString(addenda11)).append("\n");
    sb.append("    addenda12: ").append(toIndentedString(addenda12)).append("\n");
    sb.append("    addenda13: ").append(toIndentedString(addenda13)).append("\n");
    sb.append("    addenda14: ").append(toIndentedString(addenda14)).append("\n");
    sb.append("    addenda15: ").append(toIndentedString(addenda15)).append("\n");
    sb.append("    addenda16: ").append(toIndentedString(addenda16)).append("\n");
    sb.append("    addenda17: ").append(toIndentedString(addenda17)).append("\n");
    sb.append("    addenda18: ").append(toIndentedString(addenda18)).append("\n");
    sb.append("    addenda98: ").append(toIndentedString(addenda98)).append("\n");
    sb.append("    addenda99: ").append(toIndentedString(addenda99)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("id", "transactionCode", "RDFIIdentification", "checkDigit", "addendaRecords", "amount", "DFIAccountNumber", "OFACScreeningIndicator", "secondaryOFACScreeningIndicator", "addendaRecordIndicator", "traceNumber", "addenda10", "addenda11", "addenda12", "addenda13", "addenda14", "addenda15", "addenda16", "addenda17", "addenda18", "addenda98", "addenda99", "category", "lineNumber"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("transactionCode", "RDFIIdentification", "checkDigit", "addendaRecords", "amount", "DFIAccountNumber", "OFACScreeningIndicator", "secondaryOFACScreeningIndicator", "addendaRecordIndicator", "addenda10", "addenda11", "addenda12", "addenda13", "addenda14", "addenda15", "addenda16"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IATEntryDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IATEntryDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IATEntryDetail is not found in the empty JSON string", IATEntryDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IATEntryDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IATEntryDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : IATEntryDetail.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("RDFIIdentification").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `RDFIIdentification` to be a primitive type in the JSON string but got `%s`", jsonObj.get("RDFIIdentification").toString()));
      }
      if (!jsonObj.get("checkDigit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `checkDigit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("checkDigit").toString()));
      }
      if (!jsonObj.get("DFIAccountNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DFIAccountNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DFIAccountNumber").toString()));
      }
      if (!jsonObj.get("OFACScreeningIndicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OFACScreeningIndicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OFACScreeningIndicator").toString()));
      }
      if (!jsonObj.get("secondaryOFACScreeningIndicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondaryOFACScreeningIndicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secondaryOFACScreeningIndicator").toString()));
      }
      if ((jsonObj.get("traceNumber") != null && !jsonObj.get("traceNumber").isJsonNull()) && !jsonObj.get("traceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `traceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("traceNumber").toString()));
      }
      // validate the required field `addenda10`
      Addenda10.validateJsonElement(jsonObj.get("addenda10"));
      // validate the required field `addenda11`
      Addenda11.validateJsonElement(jsonObj.get("addenda11"));
      // validate the required field `addenda12`
      Addenda12.validateJsonElement(jsonObj.get("addenda12"));
      // validate the required field `addenda13`
      Addenda13.validateJsonElement(jsonObj.get("addenda13"));
      // validate the required field `addenda14`
      Addenda14.validateJsonElement(jsonObj.get("addenda14"));
      // validate the required field `addenda15`
      Addenda15.validateJsonElement(jsonObj.get("addenda15"));
      // validate the required field `addenda16`
      Addenda16.validateJsonElement(jsonObj.get("addenda16"));
      if (jsonObj.get("addenda17") != null && !jsonObj.get("addenda17").isJsonNull()) {
        JsonArray jsonArrayaddenda17 = jsonObj.getAsJsonArray("addenda17");
        if (jsonArrayaddenda17 != null) {
          // ensure the json data is an array
          if (!jsonObj.get("addenda17").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `addenda17` to be an array in the JSON string but got `%s`", jsonObj.get("addenda17").toString()));
          }

          // validate the optional field `addenda17` (array)
          for (int i = 0; i < jsonArrayaddenda17.size(); i++) {
            Addenda17.validateJsonElement(jsonArrayaddenda17.get(i));
          };
        }
      }
      if (jsonObj.get("addenda18") != null && !jsonObj.get("addenda18").isJsonNull()) {
        JsonArray jsonArrayaddenda18 = jsonObj.getAsJsonArray("addenda18");
        if (jsonArrayaddenda18 != null) {
          // ensure the json data is an array
          if (!jsonObj.get("addenda18").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `addenda18` to be an array in the JSON string but got `%s`", jsonObj.get("addenda18").toString()));
          }

          // validate the optional field `addenda18` (array)
          for (int i = 0; i < jsonArrayaddenda18.size(); i++) {
            Addenda18.validateJsonElement(jsonArrayaddenda18.get(i));
          };
        }
      }
      // validate the optional field `addenda98`
      if (jsonObj.get("addenda98") != null && !jsonObj.get("addenda98").isJsonNull()) {
        Addenda98.validateJsonElement(jsonObj.get("addenda98"));
      }
      // validate the optional field `addenda99`
      if (jsonObj.get("addenda99") != null && !jsonObj.get("addenda99").isJsonNull()) {
        Addenda99.validateJsonElement(jsonObj.get("addenda99"));
      }
      if ((jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) && !jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IATEntryDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IATEntryDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IATEntryDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IATEntryDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<IATEntryDetail>() {
           @Override
           public void write(JsonWriter out, IATEntryDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IATEntryDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IATEntryDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IATEntryDetail
   * @throws IOException if the JSON string is invalid with respect to IATEntryDetail
   */
  public static IATEntryDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IATEntryDetail.class);
  }

  /**
   * Convert an instance of IATEntryDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

